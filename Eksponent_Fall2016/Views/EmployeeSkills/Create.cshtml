@model Eksponent_Fall2016.Models.EmployeeSkillViewModel
@{
    ViewBag.Title = "Create";
}

<h2>Create</h2>
@if (Model.SkillList.Count() != 0)
{
using (Html.BeginForm())
{
    @Html.AntiForgeryToken()

    <div class="form-horizontal">
        <h4>EmployeeSkill</h4>
        <hr />
       
        @Html.ValidationSummary(true, "", new { @class = "text-danger" })
        <div class="form-group">
            @Html.LabelFor(model => model.Level, htmlAttributes: new { @class = "control-label col-md-2" }) (in years of experience)
            <div class="col-md-10">
                @Html.EditorFor(model => model.Level, new { htmlAttributes = new { @class = "form-control", @min = "1", @max = "5" } })
                @Html.ValidationMessageFor(model => model.Level, "", new { @class = "text-danger" })
            </div>
        </div>


        <div class="form-group">
            @Html.LabelFor(model => model.SkillId, "Skill", htmlAttributes: new { @class = "control-label col-md-2" })
            <div class="col-md-10">
                @Html.DropDownListFor(model => model.SkillId, Model.SkillList, htmlAttributes: new { @class = "form-control" })
                @Html.ValidationMessageFor(model => model.SkillId, "", new { @class = "text-danger" })
            </div>
        </div>



        <div class="form-group">
            <div class="col-md-offset-2 col-md-10">
                <input type="submit" value="Create" class="btn btn-default" />
            </div>
        </div>
    </div>
}
}
else
{
 <div>There are no more skills at your company to add</div>   
}

<div>
    @Html.ActionLink("Back to List", "Index")
</div>
